{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Qual valor do raio? 2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A area do circulo é  12.56\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 1\n",
    "raio = float(input('Qual valor do raio?'))\n",
    "area = 3.14 * (raio * raio)\n",
    "print(\"A area do circulo é \", area)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Qual o valor em cm do lado? 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A area do quadrado é  16.0\n",
      "O dobro da area deste quadrado é  32.0\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 2\n",
    "lado = float(input('Qual o valor em cm do lado?'))\n",
    "area = lado * lado\n",
    "print(\"A area do quadrado é \", area)\n",
    "area = area * 2\n",
    "print(\"O dobro da area deste quadrado é \", area)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Quanto você ganha por hora? 37\n",
      "Quantas horas você trabalhou esse mês? 600\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Seu salario é  22200.0\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 3\n",
    "valorHora = float(input('Quanto você ganha por hora?'))\n",
    "valorHoraMes = float(input('Quantas horas você trabalhou esse mês?'))\n",
    "\n",
    "salario = valorHora * valorHoraMes\n",
    "\n",
    "print(\"Seu salario é \", salario)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Quantos graus está Farenheit? 86\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A temperatura em graus Celsius é  30.0\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 4\n",
    "F = float(input('Quantos graus está Farenheit?'))\n",
    "\n",
    "C = (5 * (F-32) / 9)\n",
    "\n",
    "print(\"A temperatura em graus Celsius é \", C)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Quantos graus está Celsius? 30\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A temperatura em graus Farenheit é  86.0\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 5\n",
    "C = float(input('Quantos graus está Celsius?'))\n",
    "\n",
    "F = (C * 9/5) + 32\n",
    "\n",
    "print(\"A temperatura em graus Farenheit é \", F)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite um numero inteiro:  5\n",
      "Digite outro numero inteiro:  3\n",
      "Digite um numero Real:  1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resultados  15.0   16.0   1.0\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 6\n",
    "Num1 = float(input('Digite um numero inteiro: '))\n",
    "Num2 = float(input('Digite outro numero inteiro: '))\n",
    "Num3 = float(input('Digite um numero Real: '))\n",
    "\n",
    "Result1 = (Num1 * 2) * (Num2 /2)\n",
    "Result2 = (Num1 * 3) + Num3\n",
    "Result3 = Num3 * Num3 * Num3\n",
    "\n",
    "print(\"Resultados \", Result1, \" \", Result2, \" \", Result3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-6-62ba0d7e2a1b>, line 4)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-6-62ba0d7e2a1b>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    if peso >= 50\u001b[0m\n\u001b[0m                 ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 7 esse só Deus na causa\n",
    "peso = float(input('Quantos quilos?'))\n",
    "\n",
    "if peso >= 50\n",
    "peso = peso + 4%\n",
    "\n",
    "else\n",
    "print(\"O valor de quilos é \", peso)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Quanto você ganha por hora? 6.25\n",
      "Quantas horas você trabalhou esse mês? 120\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Seu salario bruto é  750.0  Seu salario Liquido com os descontos é  570.0\n"
     ]
    }
   ],
   "source": [
    "#Exercicio 8\n",
    "valorHora = float(input('Quanto você ganha por hora?'))\n",
    "valorHoraMes = float(input('Quantas horas você trabalhou esse mês?'))\n",
    "\n",
    "salarioBruto = valorHora * valorHoraMes\n",
    "\n",
    "IR = salarioBruto * 0.11\n",
    "INSS = salarioBruto * 0.08\n",
    "Sindicato = salarioBruto * 0.05\n",
    "\n",
    "salarioLiquido = salarioBruto - IR - INSS - Sindicato\n",
    "\n",
    "print(\"Seu salario bruto é \", salarioBruto, \" Seu salario Liquido com os descontos é \", salarioLiquido)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
